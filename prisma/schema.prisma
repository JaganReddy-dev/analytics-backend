generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Event {
  id        String   @id @unique @default(uuid())
  sessionId String   @db.Uuid
  userId    String   @db.Uuid
  type      String
  action    String
  metadata  Json?
  website   String
  createdAt DateTime @default(now())
  // Session   Session  @relation(fields: [sessionId], references: [sessionId])

  @@index([website])
  @@index([type])
}

model Visitor {
  id           String   @id @unique @default(uuid())
  sessionId    String   @db.Uuid
  userId       String   @db.Uuid
  url          String
  browser      String
  os           String
  device       String
  referrer     String
  screenWidth  Int
  screenHeight Int
  lat          String?
  lon          String?
  timeStamp    DateTime @default(now())
  // Session      Session  @relation(fields: [sessionId], references: [sessionId])

  //  location     String
  @@index([url])
}

model PageView {
  id        String   @id @unique @default(uuid())
  sessionId String   @db.Uuid
  userId    String   @db.Uuid
  url       String
  lat       String?
  lon       String?
  location  String?
  timeStamp DateTime @default(now())
  // Session   Session  @relation(fields: [sessionId], references: [sessionId])

  @@index([url])
}

// model Session {
//   sessionId     String     @id
//   userId        String?
//   startedAt     DateTime   @default(now())
//   endedAt       DateTime?
//   pageViewCount Int        @default(0)
//   eventCount    Int        @default(0)
//   lat           String?
//   lon           String?
//   location      String?
//   user          User?      @relation(fields: [userId], references: [id])
//   events        Event[]
//   pageviews     PageView[]
//   visitors      Visitor[]
// }

// model User {
//   id           String    @id @default(uuid())
//   createdAt    DateTime  @default(now())
//   sessionCount Int       @default(0)
//   lastSeen     DateTime?
//   sessions     Session[]
// }
